//V2.0.0+

directive_version("2.0.0+")

directive_replace("hello","hello()")

directive_replace("define_hello","fun:pure print(str message)\n{\nprint(message)\n}")

cs {
    using System.Collections.Generic;
}

fun:pure main() {
    print($"Hello, world! {returnTest("test")}")
    infer i = 10
    i++
    i--
    i += 10
    i -= 10
    i *= 10
    i /= 10
    i %= 10

    while (true) {
        print("Hello, world!")
        break
    }

    for (i = 0; i < 10; i++) {
        print("Hello, world!")
    }

    hello
}

define_hello

fun:str returnTest(str s) {
    ret s
}

fun:pure loopTest() {
    while (true) {
        print("Hello, world!")
        break
    }

    for (infer i = 0; i < 10; i++) {
        print("Hello, world!")
    }

    // should compile to: for (infer i = 0; i < 10; i++) { print("Hello, world!") }
    lp (while_is_less_than_ten < 10) {
        print($"Hello, world! {while_is_less_than_ten}")
    }
}

fun :bool break_test() { fun_ = 10; while (true) { print("Hello, world!"); break; } ret fun_; }

fun test() {}