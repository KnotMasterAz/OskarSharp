//V0.2.2+
// Standard library implemented in language for test (zero-pointers except one handled by the language to pass a ref to the array)

// number -> double (default assign to 0)
// str -> string (default assign to "")
// bool -> bool (default assign to false)

// generic<Type>[] array_add<Type>(generic<Type>[] array_a, generic<Type>[] array_b) {
//     number _length = array_a.length + array_b.length
//     number[_length] new_array
//     for (number i = 0; i <= _length; i++) {
//         generic<Type> _val
//         if (i >= num.length) { _val = array_a[i] }
//         else (i >= num.length) { _val = array_b[i] }
//         new_array[i] = _val
//     }
//     return new_array
// }

// array_add<number>(nums1, nums2)

// Comment test

/* Multiline 
* comment
* test
*/

fun:pure main() {

    const number pi = 3.14

    number num = 10.46
    str name = "Hello"

    num = 13

    bool i = false

    // number numbers = {10, 45 -424, 452 * 234}

    // number numbers2 = array_add<number>(numbers[0], {13, -234, 42*23})

    // number numbers3[4] = {1, 2, 3, 4}

    // number test = numbers3[0]

    print($"{num} {name} test!")

    if (num == 13) {
        print("num is 13")
    } else if (num == 10) {
        print("num is 10")
    } else {
        print("num is not \"13\" or \"10\"")
    }

    number num1, num2
    num1 = 69
    num2 = 621

    print($"num1 * num2 = {sum(num1, "*", num2)}")
    print($"num1 / num2 = {sum(num1, "/", num2)}")
    print($"num1 + num2 = {sum(num1, "+", num2)}")
    print($"num1 - num2 = {sum(num1, "-", num2)}")

    if (true != false && false == false) {
        if (10 == 10 || 10 != 10) {
            print("If you failed to reach this, you failed")
        }
    }
}

fun:number sum(number num1, str op, number num2) {   
    switch (op) {
        case "*":
            return num1 * num2
            break

        case "/":
            return num1 / num2
            break

        case "-":
            return num1 - num2
            break

        case "+":
            return num1 + num2
            break
        
        default:
            return -404
            break
    }
}