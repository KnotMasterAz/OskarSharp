/*
*   File has been transpiled by the KnotsSharp Transpiler
*   An open-source transpiler and language under the anarchist Licence
*   Transpiler and language design of KnotsSharp by Az Foxxo (GitHub @KnotMasterAz)
*   You may remove this notice if you wish partly or entirely
*
*   Compiled 2022-04-28 00:11:01.234382 with version 1.0.0
*/

using System;
using System.Linq;

namespace project
{
    internal class Program
    {
        //V1.0.0+;

        // /*;
        // *   This is the default compilation file for the project generated by "az";
        // *   It is not recommend to manually edit this file but run "az new" followed by flags to include;
        // *   To compile this file, run the command "az build" and it should automatically compile the project;
        // */;

        // Special entry-point for project file to compile the project;
        static void Main(string[] args)
        {
            // Create an array of the files to compile;
            string[] files = file_search(".", "*.oskar");

            // Remove the project file from being compiled;
            // files.delete_unique($"{filename_self}");

            // Delete old cache directory;
            // directory_delete("./cache");

            // Delete old build directory;
            // directory_delete("./build");

            // Create directory called cache;
            directory_create("./cache");

            // Create temp file called "project.knot";
            file_create("./cache/project.knot");

            // Loop through all the files and append them to the "project.knot" file;
            foreach (string file in files)
            {
				Console.WriteLine(file);
				// Skip the project file;
				if (file == "./project.oskar") continue;

                // Read file contents;
                string file_contents = file_get_contents(file);

                // Append file contents to "project.knot";
                file_append("./cache/project.knot", file_contents);
            }

            // Compile the project;
            compile_knot("transpiler2.0/trans.py ./cache/project.knot --force-compile --Console --log");

            // Delete cache directory;
            // directory_delete("./cache");

            // Return if any voidors occurred;
            // return void_list;
        }// File read
        static string file_get_contents(string file) => System.IO.File.ReadAllText(@file);

        // File write
        static void file_write(string file, string contents) => System.IO.File.WriteAllText(@file, @contents);

        // File append
        static void file_append(string file, string contents) => System.IO.File.AppendAllText(@file, @contents);

        // File search
        static string[] file_search(string path, string file)
        {
            try
            {
                return Directory.GetFiles(@path, @file);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
                return new string[] { };
            }
        }

        // File create
        static void file_create(string file) {
			var new_file = System.IO.File.Create(@file);
			new_file.Close();
		}

        // File delete
        static void file_delete(string file) => System.IO.File.Delete(@file);

        // Directory create
        static void directory_create(string directory) => System.IO.Directory.CreateDirectory(@directory);

        // Directory delete
        static void directory_delete(string directory) => System.IO.Directory.Delete(@directory);

        // compile_knot
        static void compile_knot(string arg) => System.Diagnostics.Process.Start("python", arg);
    }
}
